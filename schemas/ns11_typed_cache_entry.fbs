file_identifier "ns11";

table Byte   { value:  byte;   }
table UByte  { value: ubyte;   }
table Short  { value:  short;  }
table UShort { value: ushort;  }
table Int    { value:  int;    }
table UInt   { value: uint;    }
table Long   { value:  long;   }
table ULong  { value: ulong;   }
table Float  { value:  float;  }
table Double { value:  double; }
table String { value:  string; }

enum ArrayType : byte {
    ListType = 0,
    TupleType,
    SetType
}   

table ArrayByte   { value: [ byte];   array_type: ArrayType; }
table ArrayUByte  { value: [ubyte];   array_type: ArrayType; }
table ArrayShort  { value: [ short];  array_type: ArrayType; }
table ArrayUShort { value: [ushort];  array_type: ArrayType; }
table ArrayInt    { value: [ int];    array_type: ArrayType; }
table ArrayUInt   { value: [uint];    array_type: ArrayType; }
table ArrayLong   { value: [ long];   array_type: ArrayType; }
table ArrayULong  { value: [ulong];   array_type: ArrayType; }
table ArrayFloat  { value: [ float];  array_type: ArrayType; }
table ArrayDouble { value: [ double]; array_type: ArrayType; }
table ArrayString { value: [ string]; array_type: ArrayType; }

union Value {
	Byte,
	Short,
	Int,
	Long,
	UByte,
	UShort,
	UInt,
	ULong,
	Float,
	Double,
	String,
	Dict,
	ArrayByte,
	ArrayShort,
	ArrayInt,
	ArrayLong,
	ArrayUByte,
	ArrayUShort,
	ArrayUInt,
	ArrayULong,
	ArrayFloat,
	ArrayDouble,
	ArrayString,
}

table DictMapping {
        k: Value;
        v: Value;
}

table Dict { value: [DictMapping]; }

/// pylint: skip-file
table CacheEntry {
        key: string;            // key for this entry (usually nicos/device/parameter)
        time: double;           // time (in seconds after epoch) when this entry was set
        ttl: double;            // time to live (in seconds after time field of this entry)
        expired: bool = false;  // already expired (manually or using ttl), supersedes ttl
        value: Value;
}

root_type CacheEntry;
